#!/usr/bin/env python3

import rospy

from std_msgs.msg import Bool
from trajectory_msgs.msg import JointTrajectory
from trajectory_msgs.msg import JointTrajectoryPoint

from demo_interface import DemoInterface

JOINT_STATE1 = [0.00, -0.785, 0.00, -2.356, 0.00, 1.571, 0.785]
JOINT_STATE2 = [0.00, 0.00, 0.00, -1.75, 0.00, 1.571, 0.785]
JOINT_STATE3 = [0.00, 0.785, 0.00, -1.00, 0.00, 1.571, 0.785]
JOINT_STATES = [JOINT_STATE1, JOINT_STATE2, JOINT_STATE3]

def get_sample_path_msg():
    joint_trajectory = JointTrajectory()
    for joint_state in JOINT_STATES:
        joint_state_msg = JointTrajectoryPoint()
        for i in range(len(joint_state)):
            joint_state_msg.positions.append(joint_state[i])
        joint_trajectory.points.append(joint_state_msg)
    return joint_trajectory

if __name__ == "__main__":
    rospy.init_node("collision_test_node")
    d = DemoInterface(True)
    current_path_pub = rospy.Publisher("/current_path", JointTrajectory, queue_size=1)
    # sleep to allow pubs and subs time to connect
    rospy.sleep(1.0)
    input("press enter to publish sample path\n")
    sample_path_msg = get_sample_path_msg()
    current_path_pub.publish(sample_path_msg)
    input("press enter to pubish test obstacle\n")
    d.publish_object_xyz('obstacle', 0.7, 0.0, 0.6, 0.05, primitive='sphere')
    input("press enter to remove test obstacle\n")
    d.remove_object('obstacle')

