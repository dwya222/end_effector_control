#!/usr/bin/env python3

import numpy as np
import os

import rospy
from geometry_msgs.msg import Point
import rospkg

DEBUG = True

class PointCalibrator:

    def __init__(self):
        self.calibrated_pub = rospy.Publisher("/calibrated_point", Point, queue_size=1)
        self.A, self.b = self.load_calibration_model()

    def calibrate_cb(self, point):
        np_point = np.array([[point.x], [point.y], [point.z]])
        calibrated_np_point = self.A @ np_point + self.b
        calibrated_point = Point()
        calibrated_point.x = calibrated_np_point[0]
        calibrated_point.y = calibrated_np_point[1]
        calibrated_point.z = calibrated_np_point[2]
        self.calibrated_pub.publish(calibrated_point)

    def run(self):
        rospy.Subscriber("/point_command", Point, self.calibrate_cb)

    def load_calibration_model(self):
        rospack = rospkg.RosPack()
        base_path = rospack.get_path('end_effector_control')
        A = np.load(os.path.join(base_path, 'config', 'calibration', 'A.npy'))
        b = np.load(os.path.join(base_path, 'config', 'calibration', 'b.npy'))
        return A, b


if __name__ == "__main__":
    pc = PointCalibrator()
    rospy.init_node('point_calibrator')
    pc.run()
    rospy.spin()
